// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rss_news_scraper.Models;

namespace rss_news_scraper.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("rss_news_scraper.Models.Feed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Description");

                    b.Property<string>("Link");

                    b.Property<DateTime?>("PublishedAt");

                    b.Property<int>("ReadCount");

                    b.Property<int?>("SourceId");

                    b.Property<string>("Title");

                    b.Property<string>("UniqueLinkId");

                    b.Property<string>("UrlToImage");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("rss_news_scraper.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEnabled");

                    b.Property<bool>("IsOnline");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Sources");

                    b.HasData(
                        new { Id = 1, IsEnabled = false, IsOnline = true, Link = "https://cointelegraph.com/rss", Name = "Cointelegraph" },
                        new { Id = 2, IsEnabled = false, IsOnline = false, Link = "https://cryptocurrencynews.com/feed/", Name = "Cryptocurrencynews" },
                        new { Id = 3, IsEnabled = false, IsOnline = true, Link = "https://www.coindesk.com/feed/", Name = "Coindesk" },
                        new { Id = 4, IsEnabled = false, IsOnline = true, Link = "https://coinjournal.net/feed/", Name = "CoinJournal" },
                        new { Id = 5, IsEnabled = false, IsOnline = true, Link = "https://news.bitcoin.com/feed/", Name = "News-Bitcoin" },
                        new { Id = 6, IsEnabled = false, IsOnline = true, Link = "https://www.cryptoninjas.net/feed/", Name = "Cryptoninjas" },
                        new { Id = 7, IsEnabled = false, IsOnline = true, Link = "https://ethereumworldnews.com/feed/", Name = "Etheriumworldnews" },
                        new { Id = 8, IsEnabled = false, IsOnline = true, Link = "https://www.financemagnates.com/feed/", Name = "FinanceMagnates" },
                        new { Id = 9, IsEnabled = false, IsOnline = true, Link = "https://cryptonewsmonitor.com/feed/", Name = "CryptoNewsMonitor" },
                        new { Id = 10, IsEnabled = false, IsOnline = true, Link = "http://bitcoinist.com/feed/", Name = "Bitcoinist" },
                        new { Id = 11, IsEnabled = false, IsOnline = true, Link = "https://changelly.com/blog/feed/", Name = "Changelly" },
                        new { Id = 12, IsEnabled = false, IsOnline = true, Link = "https://www.newsbtc.com/feed/", Name = "NewsBTC" }
                    );
                });

            modelBuilder.Entity("rss_news_scraper.Models.Feed", b =>
                {
                    b.HasOne("rss_news_scraper.Models.Source", "Source")
                        .WithMany("Feeds")
                        .HasForeignKey("SourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
